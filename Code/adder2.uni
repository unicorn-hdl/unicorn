main(a<5>, b<5>) {
    rippleAdder(a, b);
	out: rippleAdder<5>;
}

fullAdder(a<1>, b<1>, carryIn<1>){
    x = a xor b;
    y = a and b;
    z = carryIn and x;
    sum = x xor carryIn;
    carryOut = y or z;
	out: sum, carryOut;
}

rippleAdder(a<3>, b<2+(n+2)>){
    zero = 0b;
//	sum[n] = (modA(a,c) and d)[5][(21+2):2][11];
	a[2] and b[3] = d = e =f[3];	
//    sum[0] = fullAdder(a[0], b[0], zero)[sum];

/**
    for (i from 1 to n){
        lastCarry[i] = 
				fullAdder(a[i-1], b[i-1], lastCarry[i-1])[carryOut];
        sum[i] = fullAdder(a[i], b[i], lastCarry[i])[sum];
    }
**/
	out: sum<2>;
}
ðŸ¦„
